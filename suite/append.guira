if
  not=
    append [list 1 2 3] [list 4 5 6]
    [list 1 2 3 4 5 6]
  abort "fail 1"
  nil
if
  not=
    append [list 1] [list 2]
    [list 1 2]
  abort "fail 2"
  nil
if
  not=
    append nil [list 2]
    [list 2]
  abort "fail 3"
  nil
if
  not=
    append [list 1] nil
    [list 1]
  abort "fail 4"
  nil
if
  not=
    append [list 1 2] [quote [3 4]] [list 5 6]
    [list 1 2 3 4 5 6]
  abort "fail 5"
  nil
if
  not=
    append [quote [1 2]] [quote [3 . 4]]
    quote [1 2 3 . 4]
  abort "fail 6"
  nil

# tests if this creates a circular list
let a '[1 2]
let b
  append a a
if
  not= last:b 2
  abort "fail 7"
  nil

# tests if the value of _c_ is preserved
let c '[1 2 3]
let d
  append c [list 4 5 6]
if
  not= last:c 3
  abort "fail 8"
  nil

print "append.guira: OK"
